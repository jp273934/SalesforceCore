{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Accounts/accounts.component.html","webpack:///./src/app/Accounts/accounts.component.ts","webpack:///./src/app/Accounts/accounts.module.ts","webpack:///./src/app/Campaigns/campaigns.component.html","webpack:///./src/app/Campaigns/campaigns.component.ts","webpack:///./src/app/Campaigns/campaigns.module.ts","webpack:///./src/app/Contacts/contacts.component.html","webpack:///./src/app/Contacts/contacts.component.ts","webpack:///./src/app/Contacts/contacts.module.ts","webpack:///./src/app/Projects/projects.component.html","webpack:///./src/app/Projects/projects.component.ts","webpack:///./src/app/Projects/projects.module.ts","webpack:///./src/app/Shared/app.routes.ts","webpack:///./src/app/Shared/data.service.ts","webpack:///./src/app/Tasks/tasks.component.html","webpack:///./src/app/Tasks/tasks.component.ts","webpack:///./src/app/Tasks/tasks.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Accounts</h5>\\r\\n                <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Account</th>\\r\\n                                <th>Type</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let a of accounts\\\">\\r\\n                                <td>{{ a.Name }}</td>\\r\\n                                <td>{{ a.Type }}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n            </div>\\r\\n        </div>        \\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { DataService } from '../Shared/data.service';\r\n\r\n@Component({\r\n    selector : 'accounts',\r\n    templateUrl : './accounts.component.html'\r\n})\r\n\r\nexport class AccountsComponent {\r\n    public accounts;\r\n\r\n    constructor(private dataService : DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.getAccounts();\r\n    }\r\n    \r\n    getAccounts() {\r\n        this.dataService.getData('account').subscribe( data => {\r\n            this.accounts = data;\r\n        })\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountsComponent } from './accounts.component';\r\n\r\n@NgModule({\r\n    imports : [CommonModule],\r\n    declarations : [AccountsComponent ],\r\n    exports : [ AccountsComponent ]\r\n})\r\n\r\nexport class AccountsModule {}","module.exports = \"<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Campaigns</h5>\\r\\n                    <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Campaign</th>\\r\\n                                    <th>Coordinator</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let c of campaigns\\\">\\r\\n                                    <td>{{ c.Name }}</td>\\r\\n                                    <td>{{ c.Coordinator }}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                </div>\\r\\n            </div>        \\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/data.service\";\r\n\r\n@Component({\r\n    selector : 'campaigns',\r\n    templateUrl : './campaigns.component.html'\r\n})\r\n\r\nexport class CampaignsComponent {\r\n    public campaigns;\r\n\r\n    constructor(private dataService : DataService){}\r\n\r\n    ngOnInit()\r\n    {\r\n        this.getCampaigns();\r\n    }\r\n   \r\n    private getCampaigns()\r\n    {\r\n        this.dataService.getData('campaign').subscribe(data => {\r\n            this.campaigns = data;\r\n        })\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { CampaignsComponent } from \"./campaigns.component\";\r\n\r\n@NgModule({\r\n    imports : [ CommonModule],\r\n    declarations : [ CampaignsComponent ],\r\n    exports : [ CampaignsComponent]\r\n})\r\n\r\nexport class CampaignsModule { }","module.exports = \"<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Contacts</h5>\\r\\n                    <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <td>Full Name</td>\\r\\n                                    <td>Title</td>\\r\\n                                    <td>Email</td>\\r\\n                                    <td>Phone</td>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let c of contacts\\\">\\r\\n                                    <td>{{ c.FirstName + c.LastName }}</td>\\r\\n                                    <td>{{ c.Title }}</td>\\r\\n                                    <td>{{ c.Email }}</td>\\r\\n                                    <td>{{ c.PhoneNumber }}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                </div>\\r\\n            </div>        \\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/data.service\";\r\n\r\n@Component({\r\n    selector : 'contacts',\r\n    templateUrl : './contacts.component.html'\r\n})\r\n\r\nexport class ContactsComponent {\r\n    public contacts;\r\n\r\n    constructor( private dataService : DataService){}\r\n    \r\n    ngOnInit(){\r\n        this.getContacts();\r\n    }\r\n    \r\n    getContacts(){\r\n        this.dataService.getData('contact').subscribe(data => {\r\n            this.contacts = data;\r\n        })\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ContactsComponent } from \"./contacts.component\";\r\n\r\n@NgModule({\r\n    imports : [ CommonModule],\r\n    declarations : [ ContactsComponent],\r\n    exports : [ ContactsComponent ]\r\n})\r\n\r\nexport class ContactsModule {}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Projects</h5>\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Project</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Customer Needs By</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/data.service\";\r\n\r\n@Component({\r\n    selector : 'projects',\r\n    templateUrl : './projects.component.html'\r\n})\r\n\r\nexport class ProjectsComponent {\r\n    public projects;\r\n\r\n    constructor(private dataService : DataService) {}\r\n    \r\n    ngOnInit()\r\n    {\r\n        this.getProjects();\r\n    }\r\n    \r\n    private getProjects()\r\n    {\r\n        this.dataService.getData('project').subscribe(data => {\r\n            this.projects = data;\r\n        })\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { ProjectsComponent } from \"./projects.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    imports : [ CommonModule ],\r\n    declarations : [ ProjectsComponent ],\r\n    exports : [ ProjectsComponent]\r\n})\r\n\r\nexport class ProjectsModule {}","import { Routes } from '@angular/router';\r\nimport { AccountsComponent } from '../Accounts/accounts.component';\r\nimport { ContactsComponent } from '../Contacts/contacts.component';\r\nimport { TasksComponent } from '../Tasks/tasks.component';\r\nimport { CampaignsComponent } from '../Campaigns/campaigns.component';\r\nimport { ProjectsComponent } from '../Projects/projects.component';\r\n\r\nexport const routes : Routes = [\r\n    { path : '', component : AccountsComponent},\r\n    { path: 'contacts', component : ContactsComponent},\r\n    { path: 'tasks', component : TasksComponent},\r\n    { path: 'campaigns', component : CampaignsComponent},\r\n    { path: 'projects', component : ProjectsComponent}\r\n];","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http : HttpClient){ }\r\n\r\n    getData (type : string){\r\n        return this.http.get('/api/' + type + 's');\r\n    }\r\n}","module.exports = \"<h1>Task go here</h1>\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector : 'tasks',\r\n    templateUrl : './tasks.component.html'\r\n})\r\n\r\nexport class TasksComponent {}","import { NgModule } from \"@angular/core\";\r\nimport { TasksComponent } from \"./tasks.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    imports : [ CommonModule ],\r\n    declarations : [ TasksComponent],\r\n    exports : [ TasksComponent ]\r\n})\r\n\r\nexport class TasksModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-info\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['./']\\\">Sales App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n        aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['./']\\\">Accounts <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['./contacts']\\\">Contacts</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['./tasks']\\\">Tasks</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['./projects']\\\">Projects</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['./campaigns']\\\">Campaigns</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SalesforceApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AccountsModule } from './Accounts/accounts.module';\nimport { AppComponent } from './app.component';\nimport { DataService } from './Shared/data.service';\nimport { ContactsModule } from './Contacts/contacts.module';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './Shared/app.routes';\nimport { TasksModule } from './Tasks/tasks.module';\nimport { CampaignsModule } from './Campaigns/campaigns.module';\nimport { ProjectsModule } from './Projects/projects.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, AccountsModule, HttpClientModule, ContactsModule, RouterModule.forRoot(routes), TasksModule, CampaignsModule, ProjectsModule\n  ],\n  providers: [ DataService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}